.ORIG x3000
    LD R1, NUM ; десятичное число на вход
    LD R2, ASCII ; десятичное число (ASCII сдвиг) для отображения символов в консоли
    LEA R3, MASK ; указатель на маски для побитового И
    AND R4, R4, #0 ; в R4 будет храниться текущая маска
    AND R5, R5, #0 ; в R5 будет флаг, показывающий что нашелся первый бит входного числа при побитовом И

LOOP
    LDR R4, R3, #0 ; загружаем маску из указателя
    BRz END
    ADD R3, R3, #1 ; сдвигаем указатель на следующую маску
    AND R0, R1, R4 ; накладываем маску на входное число
    BRz OUT0
    BRp OUT1

OUT0
    AND R5, R5, #1 ; проверяем найден ли первый бит, если нет, то 0 выводить не будем
    BRz LOOP
    ADD R0, R2, #0 ; прибавляем к ASCII сдвигу 0 и выводим
    OUT
    BR LOOP

OUT1
    AND R5, R5, #0
    ADD R5, R5, #1
    ADD R0, R2, #1 ; прибавляем к ASCII сдвигу 1 и выводим
    OUT
    BR LOOP

END HALT 

NUM .FILL #1441 ; 000010110100001
ASCII .FILL #48
MASK .FILL b0100000000000000
     .FILL b0010000000000000
     .FILL b0001000000000000
     .FILL b0000100000000000
     .FILL b0000010000000000
     .FILL b0000001000000000
     .FILL b0000000100000000
     .FILL b0000000010000000
     .FILL b0000000001000000
     .FILL b0000000000100000
     .FILL b0000000000010000
     .FILL b0000000000001000
     .FILL b0000000000000100
     .FILL b0000000000000010
     .FILL b0000000000000001

.END
